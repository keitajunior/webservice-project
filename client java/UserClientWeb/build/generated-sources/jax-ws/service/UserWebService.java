
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserWebService", targetNamespace = "http://service.UserManagerWS.mdk.sn/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWebService {


    /**
     * 
     * @param password
     * @param login
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authentication", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.Authentication")
    @ResponseWrapper(localName = "authenticationResponse", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.AuthenticationResponse")
    public Boolean authentication(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ajout", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.Ajout")
    @ResponseWrapper(localName = "ajoutResponse", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.AjoutResponse")
    public String ajout(
        @WebParam(name = "arg0", targetNamespace = "")
        Utilisateur arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "supprimer", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.Supprimer")
    @ResponseWrapper(localName = "supprimerResponse", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.SupprimerResponse")
    public String supprimer(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifier", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.Modifier")
    @ResponseWrapper(localName = "modifierResponse", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.ModifierResponse")
    public String modifier(
        @WebParam(name = "arg0", targetNamespace = "")
        Utilisateur arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.Utilisateur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "lister", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.Lister")
    @ResponseWrapper(localName = "listerResponse", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.ListerResponse")
    public List<Utilisateur> lister();

    /**
     * 
     * @param arg0
     * @return
     *     returns service.Utilisateur
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserById", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.GetUserById")
    @ResponseWrapper(localName = "getUserByIdResponse", targetNamespace = "http://service.UserManagerWS.mdk.sn/", className = "service.GetUserByIdResponse")
    public Utilisateur getUserById(
        @WebParam(name = "arg0", targetNamespace = "")
        LoginRequest arg0);

}
